/*
 * This file is generated by jOOQ.
 */
package com.example.demo.model;


import com.example.demo.model.tables.LibraryBooks;
import com.example.demo.model.tables.LibraryUser;
import com.example.demo.model.tables.records.LibraryBooksRecord;
import com.example.demo.model.tables.records.LibraryUserRecord;

import javax.annotation.processing.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<LibraryBooksRecord, Integer> IDENTITY_LIBRARY_BOOKS = Identities0.IDENTITY_LIBRARY_BOOKS;
    public static final Identity<LibraryUserRecord, Integer> IDENTITY_LIBRARY_USER = Identities0.IDENTITY_LIBRARY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<LibraryBooksRecord> LIBRARY_ID = UniqueKeys0.LIBRARY_ID;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<LibraryBooksRecord, Integer> IDENTITY_LIBRARY_BOOKS = Internal.createIdentity(LibraryBooks.LIBRARY_BOOKS, LibraryBooks.LIBRARY_BOOKS.ID);
        public static Identity<LibraryUserRecord, Integer> IDENTITY_LIBRARY_USER = Internal.createIdentity(LibraryUser.LIBRARY_USER, LibraryUser.LIBRARY_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<LibraryBooksRecord> LIBRARY_ID = Internal.createUniqueKey(LibraryBooks.LIBRARY_BOOKS, "library_id", LibraryBooks.LIBRARY_BOOKS.ID);
    }
}
